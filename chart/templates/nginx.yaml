apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |
    # The stream module is dynamically loaded in the Chainguard nginx image.
    # This directive is required to use the stream{} block for SNI-based routing without SSL termination.
    # The module is installed via apk in the container startup command.
    load_module /usr/lib/nginx/modules/ngx_stream_module.so;

    events {
        worker_connections  1024;
    }

    stream {
        map $ssl_preread_server_name $selected_upstream {
            hostnames;
            {{- if .Values.adminDomain }}
            *.{{ .Values.adminDomain }} backend_admin;
            {{- else }}
            *.admin.{{ .Values.domain }} backend_admin;
            {{- end }}
            *.{{ .Values.domain }} backend_tenant;
            {{- if .Values.customGateway | default false}}
            *.{{ .Values.customGateway.domainName }} backend_custom_gateway;
            {{- end }}
        }

        upstream backend_admin {
            server ###ZARF_VAR_BASE_IP###.200:443;
        }

        upstream backend_tenant {
            server ###ZARF_VAR_BASE_IP###.201:443; 
        }

        {{- if .Values.customGateway | default false}}
        upstream backend_custom_gateway {
            server ###ZARF_VAR_BASE_IP###.202:443;
        }
        {{- end }}

        server {
            listen 443;
            proxy_pass $selected_upstream;
            ssl_preread on;
        }

        {{- range .Values.extraPorts }}
        upstream backend_tenant_{{ . }} {
            server ###ZARF_VAR_BASE_IP###.201:{{ . }}; 
        }

        server {
            listen {{ . }};
            proxy_pass backend_tenant_{{ . }};
        }
        {{- end }}
    }

    http {
      # Redirect server block
      server {
          listen 80;
          server_name _;
          return 301 https://$host$request_uri;
      }
    }

    error_log /dev/stderr;

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx
  namespace: uds-dev-stack
spec:
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: nginx
          # This is Chainguard's latest-dev image, pinned as of 04/07/25 - nginx/1.27.4
          image: cgr.dev/chainguard/nginx:latest-dev@sha256:de240fb7bf27fd62ddbe4f81c592bc1d385210a59f14e292548d3790038b7e6a
          command:
            - /bin/sh
            - -c
            - |
              apk add nginx-mod-stream
              nginx -g "daemon off;"
          ports:
            - containerPort: 80
              hostPort: 80
            - containerPort: 443
              hostPort: 443
          {{- range .Values.extraPorts }}
            - containerPort: {{ . }}
              hostPort: {{ . }}
          {{- end }}
          securityContext:
            # Required for `apk add` during startup, matches upstream image
            runAsUser: 0
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config
