variables:
  - name: K3S_VERSION
    default: "v1.28.7-k3s1"
  - name: IMAGE_PATH
    default: "ghcr.io/defenseunicorns/oss/uds-k3d-k3s"

tasks:
  - name: default
    description: "Build and deploy uds-k3d"
    actions:
      - description: "Build UDS K3d package"
        cmd: "uds zarf package create --confirm"

      - description: "Deploy UDS K3d package"
        cmd: "uds zarf package deploy zarf-package-uds-k3d-*.tar.zst --confirm --set K3D_IMAGE=${IMAGE_PATH}:${K3S_VERSION}"

  - name: validate
    actions:
      - description: Validate coredns is up
        wait:
          cluster:
            kind: Pod
            name: "k8s-app=kube-dns"
            namespace: kube-system
            condition: Ready
      - description: Validate coredns is resolving *.uds.dev internally
        cmd: |
          set -e
          FOO_IP=$(uds zarf tools kubectl run dig-test --image=arunvelsriram/utils -q --restart=Never --rm -i -- dig +short foo.uds.dev)
          if [ "${FOO_IP}" != "127.0.0.1" ]; then
            echo "CoreDNS is resolving foo.uds.dev to host.k3d.internal"
          else
            echo "CoreDNS patch failed, foo.uds.dev is resolving to 127.0.0.1"
            exit 1
          fi
      - description: Validate zarf init
        cmd: |
          set -e
          # uds zarf tools download-init does not work in 0.9.4 - https://github.com/defenseunicorns/uds-cli/issues/517
          uds zarf package pull oci://ghcr.io/defenseunicorns/packages/init:v$(uds zarf version)
          mv zarf-init-amd64-v$(uds zarf version).tar.zst zarf-init-amd64-$(uds zarf version).tar.zst
          # Test zarf init due to containerd issue - https://github.com/defenseunicorns/zarf/issues/592
          uds zarf init --confirm

  - name: build-image
    actions:
      - description: Build the custom k3s image
        cmd: docker build -t ${IMAGE_PATH}:${K3S_VERSION} --build-arg K3S_TAG=${K3S_VERSION} docker/

  - name: publish-image 
    actions:
      - task: build-image
      - description: Publish the custom k3s image
        cmd: docker push ${IMAGE_PATH}:${K3S_VERSION}
