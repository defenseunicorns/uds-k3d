name: Publish UDS Capability

on:
  push:
    branches:
      - main

jobs:
  tag-new-version:
    runs-on: ubuntu-latest

    permissions: write-all

    outputs:
      release_created: ${{ steps.release-flag.outputs.release_created }}
    steps:
      - name: Create Release Tag
        id: tag
        uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4.1.3
        with:
          command: manifest # use configs in release-please-config.json
      - id: release-flag
        run: echo "release_created=${{ steps.tag.outputs.release_created || false }}" >> $GITHUB_OUTPUT

  publish-uds-package:
    needs: tag-new-version
    if: ${{ needs.tag-new-version.outputs.release_created == 'true'}}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        k3s_image_repository: ["rancher/k3s"]
        k3s_image_version:
          ["v1.28.8-k3s1", "v1.29.8-k3s1", "v1.30.4-k3s1", "v1.31.0-k3s1"]

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

      - name: Setup UDS
        uses: defenseunicorns/uds-common/.github/actions/setup@e3008473beab00b12a94f9fcc7340124338d5c08 # v0.13.1
        with:
          registry1Username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
          registry1Password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}
          ghToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the base capability
        run: |
          uds zarf package create --confirm -a arm64 -o oci://ghcr.io/defenseunicorns/packages \
            --set K3S_IMAGE_REPOSITORY=${{ matrix.k3s_image_repository }} \
            --set K3S_IMAGE_VERSION=${{ matrix.k3s_image_version }}

          uds zarf package create --confirm -a amd64 -o oci://ghcr.io/defenseunicorns/packages \
            --set K3S_IMAGE_REPOSITORY=${{ matrix.k3s_image_repository }} \
            --set K3S_IMAGE_VERSION=${{ matrix.k3s_image_version }}

  publish-uds-cuda-package:
    needs: tag-new-version
    if: ${{ needs.tag-new-version.outputs.release_created == 'true'}}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        k3s_image_repository: ["rancher/k3s"]
        k3s_image_version:
          ["v1.28.8-k3s1", "v1.29.8-k3s1", "v1.30.4-k3s1", "v1.31.0-k3s1"]
        cuda_image_version:
          [
            11.8.0-base-ubuntu22.04,
            12.1.0-base-ubuntu22.04,
            12.5.0-base-ubuntu22.04,
          ]

    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

      - uses: docker/setup-buildx-action@8026d2bc3645ea78b0d2544766a1225eb5691f89 # v3.7.0

      - name: Setup UDS
        uses: defenseunicorns/uds-common/.github/actions/setup@e3008473beab00b12a94f9fcc7340124338d5c08 # v0.13.1
        with:
          registry1Username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
          registry1Password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}
          ghToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the CUDA K3s image
        run: |
          uds run publish-cuda-image \
            --set K3S_IMAGE_REPOSITORY=${{ matrix.k3s_image_repository }} \
            --set K3S_IMAGE_VERSION="${{ matrix.k3s_image_version }}" \
            --set CUDA_IMAGE_VERSION="${{ matrix.cuda_image_version }}" \
            --no-progress

      - name: Publish the CUDA capability
        run: |
          uds zarf package create --confirm -a amd64 -o oci://ghcr.io/defenseunicorns/packages --flavor cuda
